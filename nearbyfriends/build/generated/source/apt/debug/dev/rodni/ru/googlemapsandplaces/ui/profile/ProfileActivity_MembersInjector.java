// Generated by Dagger (https://google.github.io/dagger).
package dev.rodni.ru.googlemapsandplaces.ui.profile;

import dagger.MembersInjector;
import dev.rodni.ru.googlemapsandplaces.data.database.entities.userdata.User;
import javax.inject.Provider;

public final class ProfileActivity_MembersInjector implements MembersInjector<ProfileFragment> {
  private final Provider<User> userSingletonProvider;

  public ProfileActivity_MembersInjector(Provider<User> userSingletonProvider) {
    this.userSingletonProvider = userSingletonProvider;
  }

  public static MembersInjector<ProfileFragment> create(Provider<User> userSingletonProvider) {
    return new ProfileActivity_MembersInjector(userSingletonProvider);
  }

  @Override
  public void injectMembers(ProfileFragment instance) {
    injectUserSingleton(instance, userSingletonProvider.get());
  }

  public static void injectUserSingleton(ProfileFragment instance, User userSingleton) {
    instance.userSingleton = userSingleton;
  }
}
